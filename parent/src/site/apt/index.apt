 ------
 Myfaces Core 2.3-next
 ------

 ~~ Licensed to the Apache Software Foundation (ASF) under one
 ~~ or more contributor license agreements.  See the NOTICE file
 ~~ distributed with this work for additional information
 ~~ regarding copyright ownership.  The ASF licenses this file
 ~~ to you under the Apache License, Version 2.0 (the
 ~~ "License"); you may not use this file except in compliance
 ~~ with the License.  You may obtain a copy of the License at
 ~~
 ~~   http://www.apache.org/licenses/LICENSE-2.0
 ~~
 ~~ Unless required by applicable law or agreed to in writing,
 ~~ software distributed under the License is distributed on an
 ~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~~ KIND, either express or implied.  See the License for the
 ~~ specific language governing permissions and limitations
 ~~ under the License.
 

MyFaces Core 2.3-next Project

  This project provides an (not fully compatible!) implementation of the JavaServer Faces (JSF) 2.3 specification.

    2.3-next is a preview for the next (real) JSF version, which will remove ManagedBeans and FacesEL.
    Compared to 2.3, it contains the following changes:
    
    * Removed shared modules and a !BIG! code cleanup
    * Removed FacesEL implementation
    * Removed ManagedBeans but register the found @ManagedBeans as CDI beans
    * No commons dependencies required anymore
    * 1MB less size (including dependencies)
    * Up to 15% better performance
    * A Quarkus extensions!

    Modules:

    * The API submodule implements all of the classes that are defined in the specification. 
      If you are looking for API documentation about the classes that your JSF application
      needs to use, then see the javadoc for the API module.

    * The Impl submodule provides "invisible" support classes that user code does not directly
      invoke, but which is needed for a working JSF framework. Examples are the renderer classes
      for the standard JSF components.

  These two libraries (myfaces-api.jar and myfaces-impl.jar) are deployed together with your
  code to form a JSF web application.
  
  Additionally, there are other submodules:  
      
    * The Bundle submodule provides both API and Impl classes into a single jar file with a OSGi MANIFEST.MF.
    * The quarkus extensions

  If you want to know more about how JavaServer(tm) Faces works, take a look at the documentation
  referenced from the main MyFaces site.

Requirements

  JSF 2.3 requires java 1.8 or later, JSP 2.2, JSTL 1.2, CDI 2.0, WebSocket 1.1 and a Java Servlet 4.0 implementation.

Specifications

  MyFaces implements {{{https://www.jcp.org/en/jsr/detail?id=372}Java Specification Request 372}}
  Each major release of MyFaces is certified against the Sun TCK to ensure compliance.
  
  Check the download page or you can check the nightly builds {{{https://repository.apache.org/content/repositories/snapshots/org/apache/myfaces/core}here}}.
